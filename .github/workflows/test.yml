name: Test Bootstrap Scripts

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-bash:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        shell: [bash, sh]

    steps:
    - uses: actions/checkout@v4

    - name: Test script syntax
      run: |
        ${{ matrix.shell }} -n scripts/universal-bootstrap.sh
        ${{ matrix.shell }} -n scripts/bootstrap-bash.sh
        ${{ matrix.shell }} -n scripts/bootstrap-posix.sh

    - name: Test platform detection
      run: |
        ${{ matrix.shell }} scripts/universal-bootstrap.sh --version

    - name: Run integration tests
      run: |
        chmod +x tests/test-integration.sh
        ./tests/test-integration.sh

  test-powershell:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Test PowerShell script
      run: |
        powershell -ExecutionPolicy Bypass -File scripts/bootstrap.ps1 -PackageSpec "--version"

    - name: Test PowerShell syntax
      run: |
        powershell -Command "Get-Content scripts/bootstrap.ps1 | ForEach-Object { [ScriptBlock]::Create($_) }"

  test-containers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - alpine:latest
          - debian:slim
          - ubuntu:latest

    container: ${{ matrix.container }}

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        if command -v apk >/dev/null; then
          apk add --no-cache curl bash
        elif command -v apt >/dev/null; then
          apt update && apt install -y curl bash
        fi

    - name: Test universal bootstrap
      run: |
        chmod +x scripts/universal-bootstrap.sh
        ./scripts/universal-bootstrap.sh --version